use std::collections::HashMap;
use lazy_static::lazy_static;

lazy_static! {
    pub static ref COUNTRY_MAP: HashMap<&'static str, i32> = {
        let mut m = HashMap::new();
        m.insert("Afghanistan", 5);
        m.insert("Albania", 8);
        m.insert("Algeria", 61);
        m.insert("American Samoa", 14);
        m.insert("Andorra", 3);
        m.insert("Angola", 11);
        m.insert("Anguilla", 7);
        m.insert("Antarctica", 12);
        m.insert("Antigua and Barbuda", 6);
        m.insert("Argentina", 13);
        m.insert("Armenia", 9);
        m.insert("Aruba", 17);
        m.insert("Australia", 16);
        m.insert("Austria", 15);
        m.insert("Azerbaijan", 18);
        m.insert("Bahamas", 32);
        m.insert("Bahrain", 25);
        m.insert("Bangladesh", 21);
        m.insert("Barbados", 20);
        m.insert("Belarus", 36);
        m.insert("Belgium", 22);
        m.insert("Belize", 37);
        m.insert("Benin", 27);
        m.insert("Bermuda", 28);
        m.insert("Bhutan", 33);
        m.insert("Bolivia", 30);
        m.insert("Bosnia and Herzegovina", 19);
        m.insert("Botswana", 35);
        m.insert("Bouvet Island", 34);
        m.insert("Brazil", 31);
        m.insert("British Indian Ocean Territory", 104);
        m.insert("Brunei Darussalam", 29);
        m.insert("Bulgaria", 24);
        m.insert("Burkina Faso", 23);
        m.insert("Burundi", 26);
        m.insert("Cambodia", 114);
        m.insert("Cameroon", 47);
        m.insert("Canada", 38);
        m.insert("Cape Verde", 52);
        m.insert("Cayman Islands", 121);
        m.insert("Central African Republic", 41);
        m.insert("Chad", 207);
        m.insert("Chile", 46);
        m.insert("China", 48);
        m.insert("Christmas Island", 53);
        m.insert("Cocos (Keeling) Islands", 39);
        m.insert("Colombia", 49);
        m.insert("Comoros", 116);
        m.insert("Congo", 42);
        m.insert("Congo, the Democratic Republic of the", 40);
        m.insert("Cook Islands", 45);
        m.insert("Costa Rica", 50);
        m.insert("CÃ´te d'Ivoire", 44);
        m.insert("Croatia", 97);
        m.insert("Cuba", 51);
        m.insert("Cyprus", 54);
        m.insert("Czech Republic", 55);
        m.insert("Denmark", 58);
        m.insert("Djibouti", 57);
        m.insert("Dominica", 59);
        m.insert("Dominican Republic", 60);
        m.insert("East Timor", 216);
        m.insert("Ecuador", 62);
        m.insert("Egypt", 64);
        m.insert("El Salvador", 203);
        m.insert("Equatorial Guinea", 87);
        m.insert("Eritrea", 66);
        m.insert("Estonia", 63);
        m.insert("Ethiopia", 68);
        m.insert("Falkland Islands (Malvinas)", 71);
        m.insert("Faroe Islands", 73);
        m.insert("Fiji", 70);
        m.insert("Finland", 69);
        m.insert("France", 74);
        m.insert("France, Metropolitan", 75);
        m.insert("French Guiana", 80);
        m.insert("French Polynesia", 170);
        m.insert("Gabon", 76);
        m.insert("Gambia", 84);
        m.insert("Georgia", 79);
        m.insert("Germany", 56);
        m.insert("Ghana", 81);
        m.insert("Gibraltar", 82);
        m.insert("Greece", 88);
        m.insert("Greenland", 83);
        m.insert("Grenada", 78);
        m.insert("Guadeloupe", 86);
        m.insert("Guam", 91);
        m.insert("Guatemala", 90);
        m.insert("Guinea", 85);
        m.insert("Guinea-Bissau", 92);
        m.insert("Guyana", 93);
        m.insert("Haiti", 98);
        m.insert("Heard Island and McDonald Islands", 95);
        m.insert("Holy See (Vatican City State)", 228);
        m.insert("Honduras", 96);
        m.insert("Hong Kong", 94);
        m.insert("Hungary", 99);
        m.insert("Iceland", 107);
        m.insert("India", 103);
        m.insert("Indonesia", 100);
        m.insert("Iran (Islamic Republic of)", 106);
        m.insert("Iraq", 105);
        m.insert("Ireland", 101);
        m.insert("Israel", 102);
        m.insert("Italy", 108);
        m.insert("Jamaica", 109);
        m.insert("Japan", 111);
        m.insert("Jordan", 110);
        m.insert("Kazakhstan", 122);
        m.insert("Kenya", 112);
        m.insert("Kiribati", 115);
        m.insert("Korea (Democratic People's Republic of)", 118);
        m.insert("Korea, Republic of", 119);
        m.insert("Kuwait", 120);
        m.insert("Kyrgyzstan", 113);
        m.insert("Lao People's Democratic Republic", 123);
        m.insert("Latvia", 132);
        m.insert("Lebanon", 124);
        m.insert("Lesotho", 129);
        m.insert("Liberia", 128);
        m.insert("Libyan Arab Jamahiriya", 133);
        m.insert("Liechtenstein", 126);
        m.insert("Mexico", 125);
        m.insert("Netherlands", 161);
        m.insert("Norway", 162);
        m.insert("Sweden", 191);
        m
    };
}